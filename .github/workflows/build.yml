name: Build and Test

on:
  push:
    branches:
      - main
      - beta
      - "feature/*"
      - "fix/*"
      - "danstis/*"
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  version:
    name: Generate version and tag
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      FullSemVer: ${{ steps.gitversion.outputs.FullSemVer }}
      PreReleaseTagWithDash: ${{ steps.gitversion.outputs.PreReleaseTagWithDash }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v4.0.1
        with:
          versionSpec: "6.x"
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v4.0.1
      - name: Create annotation for build error
        run: |
          echo "::notice::FullSemVer ${{ steps.gitversion.outputs.FullSemVer }}"
          echo "::notice::PreReleaseTagWithDash ${{ steps.gitversion.outputs.PreReleaseTagWithDash }}"
      - name: Bump version and push tag # https://github.com/marketplace/actions/github-tag
        uses: mathieudutour/github-tag-action@v6.2
        if: ${{ steps.gitversion.outputs.PreReleaseTagWithDash == '' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.gitversion.outputs.FullSemVer }}
          tag_prefix: v

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Go 1.x
        uses: actions/setup-go@v6
        with:
          go-version: ^1.20
        id: go
      - name: Run go build
        run: go build -v ./...

  hadolint:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Run hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: deploy/dockerfile
          format: sonarqube
          output-file: hadolint-report.json
          no-fail: true
      - name: Upload hadolint report
        uses: actions/upload-artifact@v4
        with:
          name: hadolint-report
          path: hadolint-report.json

  scan:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    needs: [version, hadolint]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Download hadolint report
        uses: actions/download-artifact@v5
        with:
          name: hadolint-report
      - name: Set up Go 1.x
        uses: actions/setup-go@v6
        with:
          go-version: ^1.20
        id: go
      - name: Test
        run: go test -v -coverprofile=coverage.out -covermode=count -json ./... | tee test-report.out
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          files: ./coverage.out # optional
      - name: Go Vet
        run: go vet ./... > govet.out
      - name: Run golangci-lint # https://github.com/marketplace/actions/run-golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          args: --issues-exit-code=0 --output.checkstyle.path=golangci-lint.out
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6.0.0 # https://github.com/marketplace/actions/official-sonarqube-scan
        if: ${{ github.actor != 'dependabot[bot]' }}
        with:
          args: >
            -Dsonar.projectVersion=${{ needs.version.outputs.FullSemVer }}
            -Dsonar.externalIssuesReportPaths=hadolint-report.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
